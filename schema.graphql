### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Mutation {
  activateProduct(id: Int!, status: Boolean!): Product
  createProduct(active: Boolean!, category: String!, color: String!, description: String!, ownerId: Int!, title: String!): Product
  createRole(name: String!): Role
  createUser(email: String!, name: String!): User
  makeAdmin(id: Int!): UserRoles
}

type Product {
  active: Boolean!
  category: String
  color: String
  description: String
  id: Int!
  owner: User!
  title: String!
}

enum ProductsFilter {
  active
  all
}

type ProductsPayload {
  count: Int
  data: [Product]
  hasMore: Boolean
}

type Query {
  product(id: Int!): Product
  products(filter: ProductsFilter, first: Int! = 10, searchBy: String, skip: Int! = 0): ProductsPayload
  roles: [Role!]!
  user(id: Int!): User
  userProfile: User
  users: [User!]!
}

type Role {
  id: Int!
  name: String!
}

type User {
  email: String!
  id: Int!
  name: String
  products: [Product!]!
  roles: [UserRoles!]!
}

type UserRoles {
  id: Int!
  role: Role!
  roleId: Int!
  user: User!
  userId: Int!
}